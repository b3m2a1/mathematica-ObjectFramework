(*Autogenerated ObjectFramework.m package using AppBuilder.m*)
BeginPackage["ObjectFramework`"];
Begin["`Private`Package`"];
	$PackageDirectory=
		DirectoryName@$InputFileName;
	$PackageName=
		"ObjectFramework";
	pullDeclarations[pkgFile_]:=
		With[{f=OpenRead[pkgFile]},
			pkgFile->Cases[
				Reap[
					Do[
						Replace[ReadList[f,Hold[Expression],1],{
							{}->Return[EndOfFile],
							{Hold[_Begin|_BeginPackage|
								CompoundExpression[_Begin|_BeginPackage,___]]}:>
								Return[Begin],
							{e_}:>Sow[e]
							}],
						Infinity];
					Close@f;
					][[2,1]],
				s_Symbol?(
					Function[sym,
						Quiet[Context[sym]]==$Context,
					HoldFirst]):>
					HoldPattern[s],
				Infinity
				]
		];
	declarePackage[pkgFile_->syms_]:=
		Map[
			If[
				Total@
					Map[Length,
						Through[
							Map[Apply,{
								OwnValues,DownValues,
								UpValues,SubValues
								}][#]
							]
						]==0,
				#:=
					(
						Replace[Thread[syms,HoldPattern],
							Verbatim[HoldPattern][{s__}]:>Clear[s]
							];
						BeginPackage["ObjectFramework`"];
						Get[pkgFile];
						EndPackage[];
						ReleaseHold[#]
						)
				]&,
			syms
			];
	declarePackage[pkgFile_String]:=
		declarePackage@pullDeclarations[pkgFile]
End[];
CheckAbort[
	`Private`Package`$Packages=
		Join[
			FileNames["*.m",
				FileNameJoin@{DirectoryName@$InputFileName,"Packages"}],
			FileNames["*.wl",
				FileNameJoin@{DirectoryName@$InputFileName,"Packages"}]
			];
	`Private`Package`declarePackage/@
		`Private`Package`$Packages;,
	EndPackage[]
	];
EndPackage[];